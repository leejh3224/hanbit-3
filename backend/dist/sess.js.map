{"version":3,"sources":["../src/sess.js"],"names":["host","redis_conf","RedisStore","require","client","createClient","port","on","console","log","err","store","prefix","db","sess","secret","resave","saveUninitialized","cookie","secure","httpOnly","maxAge"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAM,EAAEA,IAAF,EAAQC,UAAR,qBAAN;;AAEA,MAAMC,aAAaC,QAAQ,eAAR,2BAAnB;AACA,MAAMC,SAAS,gBAAMC,YAAN,CAAmBJ,WAAWK,IAA9B,EAAoCN,IAApC,CAAf;;AAEA;AACAI,OAAOG,EAAP,CAAU,OAAV,EAAmB,MAAM;AACvBC,UAAQC,GAAR,CAAY,wBAAZ;AACD,CAFD;;AAIAL,OAAOG,EAAP,CAAU,OAAV,EAAoBG,GAAD,IAAS;AAC1BF,UAAQC,GAAR,CAAYC,GAAZ;AACD,CAFD;AAGA;;AAEA;AACO,MAAMC,wBAAQ,IAAIT,UAAJ,CAAe;AAClCE,QADkC;AAElCQ,UAAQ,UAF0B;AAGlCC,MAAIZ,WAAWY;AAHmB,CAAf,CAAd;;AAMP,MAAMC,OAAO;AACXH,OADW;AAEXI,UAAQ,gBAFG;AAGXC,UAAQ,KAHG;AAIXC,qBAAmB,KAJR;AAKXC,UAAQ;;AAEN;AACAC,YAAQ,KAHF;AAINC,cAAU,IAJJ;;AAMN;AACAC,YAAQ,OAAO,EAAP,GAAY,EAAZ,GAAiB;AAPnB;AALG,CAAb;;kBAgBeP,I","file":"sess.js","sourcesContent":["import session from 'express-session'\nimport redis from 'redis'\nimport config from './config'\n\nconst { host, redis_conf } = config\n\nconst RedisStore = require('connect-redis')(session)\nconst client = redis.createClient(redis_conf.port, host)\n\n/* eslint-disable no-console */\nclient.on('ready', () => {\n  console.log('redis client is ready!')\n})\n\nclient.on('error', (err) => {\n  console.log(err)\n})\n/* eslint-enable no-console */\n\n// use store to delete session for logout route\nexport const store = new RedisStore({\n  client,\n  prefix: 'session:',\n  db: redis_conf.db,\n})\n\nconst sess = {\n  store,\n  secret: 'session-secret',\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n\n    // if true, deserialize user will never be called\n    secure: false,\n    httpOnly: true,\n\n    // 5 hrs duration\n    maxAge: 1000 * 60 * 60 * 50,\n  }\n}\n\nexport default sess\n"]}