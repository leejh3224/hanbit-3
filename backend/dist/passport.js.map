{"version":3,"sources":["../src/passport.js"],"names":["naver","facebook","module","exports","app","passport","use","initialize","session","serializeUser","user","done","console","log","id","deserializeUser","_id","findById","then","catch","e","usernameField","passwordField","passReqToCallback","req","email","password","name","phone","postcode","address1","address2","body","findOne","newUser","generateHash","save","validatePassword","clientID","clientSecret","callbackURL","accessToken","refreshToken","profile","social","access_token","displayName"],"mappings":"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","file":"passport.js","sourcesContent":["import User from './models/User'\nimport { Strategy as LocalStrategy } from 'passport-local' \nimport { Strategy as NaverStrategy } from 'passport-naver'\nimport { Strategy as FacebookStrategy } from 'passport-facebook'\nimport config from './config'\n\nconst { naver, facebook } = config\n\nmodule.exports = (app, passport) => {\n\n  app.use(passport.initialize())\n  app.use(passport.session())\n\n  /* eslint-disable no-console */\n  passport.serializeUser((user, done) => {\n    console.log('serialize')\n    done(null, user.id)\n  })\n  \n  passport.deserializeUser((_id, done) => {\n    console.log('deserialize')\n    User.findById({ _id })\n        .then(user => done(null, user))\n        .catch(e => done(e, false))\n  })\n  /* eslint-enable no-console */\n  \n  passport.use('local-signup', new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'password',\n    passReqToCallback : true,\n  }, (req, email, password, done) => {\n    const {\n      name,\n      phone,\n      postcode,\n      address1,\n      address2,\n    } = req.body\n    \n    User.findOne({ email })\n        .then(user => {\n          if (user) {\n            done(null, false)\n          }\n          const newUser = new User()\n          newUser.email = email\n          newUser.password = newUser.generateHash(password)\n          newUser.name = name\n          newUser.phone = phone\n          newUser.postcode = postcode\n          newUser.address1 = address1\n          newUser.address2 = address2\n          return newUser.save()\n                 .then(user => done(null, user))\n                 .catch(e => done(e, false))\n        })\n        .catch(e => done(e, false))\n  }))\n\n  passport.use('local-signin', new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'password'\n  }, (email, password, done) => {\n    User.findOne({ email })\n        .then(user => {\n          if (!user) {\n            done(null, false)\n          } else if (!user.validatePassword(password)) {\n            done(null, false)\n          } else {\n\n            // else로 감싸지 않으면 done 함수가 두 번 불려지고\n            // can't set headers after they're set 에러를 일으킴\n            done(null, user)\n          }\n        })\n        .catch(e => done(e, false))\n  }))\n\n  /* naver */\n  passport.use('provider:naver', new NaverStrategy({\n    clientID: naver.clientID,\n    clientSecret: naver.clientSecret,\n    callbackURL: naver.callbackURL,\n  }, (accessToken, refreshToken, profile, done) => {\n    User.findOne({ 'social.naver.id': profile.id })\n        .then(user => {\n          if (!user) {\n            const newUser = new User()\n            newUser.social.naver.access_token = accessToken\n            newUser.social.naver.id = profile.id\n            newUser.social.naver.displayName = profile.displayName\n            return newUser.save()\n                   .then(user => done(null, user))\n                   .catch(e => done(e, false))\n          } else {\n            done(null, user)\n          }\n        })\n        .catch(e => done(e, false))\n  }))\n\n  /* facebook */\n  passport.use('provider:facebook', new FacebookStrategy({\n    clientID: facebook.clientID,\n    clientSecret: facebook.clientSecret,\n    callbackURL: facebook.callbackURL,\n  }, (accessToken, refreshToken, profile, done) => {\n    User.findOne({ 'social.facebook.id': profile.id })\n        .then(user => {\n          if (!user) {\n            const newUser = new User()\n            newUser.social.facebook.access_token = accessToken\n            newUser.social.facebook.id = profile.id\n            newUser.social.facebook.displayName = profile.displayName\n            return newUser.save()\n                   .then(user => done(null, user))\n                   .catch(e => done(e, false))\n          } else {\n            done(null, user)\n          }\n        })\n        .catch(e => done(e, false))\n  }))\n}"]}